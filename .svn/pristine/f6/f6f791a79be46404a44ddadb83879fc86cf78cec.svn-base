package com.solidextend.sys.role.dao;

import com.solidextend.core.mybatis.Mapper;
import com.solidextend.sys.role.vo.Role;
import com.solidextend.sys.role.vo.RoleExample;
import com.solidextend.sys.user.vo.User;

import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.session.RowBounds;

/**
 * 角色管理
 * @author 王聚金
 * @date 2014-01-03
 */
@Mapper
public interface RoleMapper {
    /**
     * 查询角色总数
     * @param example
     * @return int
     */
    int countByExample(RoleExample example);

    /**
     * 删除角色信息
     * @param example
     * @return int
     */
    int deleteByExample(RoleExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYS_ROLE
     *
     * @mbggenerated Fri Jan 03 13:34:10 CST 2014
     */
    int deleteByPrimaryKey(String id);

    /**
     * 保存角色信息
     * @param record
     * @return int
     */
    int insert(Role record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYS_ROLE
     *
     * @mbggenerated Fri Jan 03 13:34:10 CST 2014
     */
    int insertSelective(Role record);

    /**
     * 查询角色列表
     * @param example
     * @return List<Role>
     */
    List<Role> selectByExample(RoleExample example);
    
    /**
     * 查询角色列表（分页）
     * @param rowBounds
     * @param example
     * @return List<Role>
     */
    List<Role> selectByExample(RowBounds rowBounds, RoleExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYS_ROLE
     *
     * @mbggenerated Fri Jan 03 13:34:10 CST 2014
     */
    Role selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYS_ROLE
     *
     * @mbggenerated Fri Jan 03 13:34:10 CST 2014
     */
    int updateByExampleSelective(@Param("record") Role record, @Param("example") RoleExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYS_ROLE
     *
     * @mbggenerated Fri Jan 03 13:34:10 CST 2014
     */
    int updateByExample(@Param("record") Role record, @Param("example") RoleExample example);

    /**
     * 修改角色信息
     * @param record
     * @return int
     */
    int updateByPrimaryKeySelective(Role record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SYS_ROLE
     *
     * @mbggenerated Fri Jan 03 13:34:10 CST 2014
     */
    int updateByPrimaryKey(Role record);
    
    
    /**
     * 根据用户id得到用户的角色列表
     * @param userId
     * @return
     */
    public List<Role> getRolesByUser(String userId);

    /**
     * 根据角色id查询角色的基本信息
     * @param roleId
     * @return Role
     */
	Role getRoleById(String roleId);

	/**
	 * 解除角色和模块关系
	 * @param roleId
	 */
	void deleteRoleModuleByroleId( @Param("roleIds") String[] roleId);

	void deleteAdminRoleModuleByroleId( @Param("roleIds") String[] roleId);
	
	/**
	 * 根据角色名称和密码查询出角色。参数可以不指定。只按照指定的参数查询
	 * @param roleName
	 * @param organId
	 * @return
	 */
	public List<Role> findRoleByNameAndOrganId(@Param("roleName")String roleName, @Param("organId")String organId);
	
	/**
	 * 根据模块id和功能查询出已授权角色
	 * @param moduleId
	 * @param funs
	 * @return
	 */
	public List<Role> getRoleListByModule(@Param("moduleId")String moduleId,@Param("funs")String[][] funs);
	
	/**
	 * 根据机构编号和层级码查询出机构和角色拼接成树所需的数据。只按照指定的参数查询
	 * @param tierCode
	 * @param organId
	 * @return
	 */
	List<Map> selectRolesOrganTree(@Param("organId")String organId,@Param("tierCode")String tierCode);
	List<Role> selectRoles(@Param("organId")String organId,@Param("roleName")String roleName);
	Integer selectRolesCount(@Param("organId")String organId,@Param("roleName")String roleName);
}